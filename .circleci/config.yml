version: 2.1
jobs:
  build:
    environment:
      - GOPATH: /home/circleci/go
    docker:
      - image: circleci/golang:1.16
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    working_directory: /home/circleci/go/src/github.com/inouet/gh-open
    steps:
      - run: echo 'export PATH=${GOPATH}/bin/:${PATH}' >> $BASH_ENV
      - checkout
      - run: go get -v -t -d ./...
      - run: go get golang.org/x/lint/golint
      - run: golint ./...
      - run: go vet ./...
      - run: go test -v -race ./...
  deploy:
    environment:
      - GOPATH: /home/circleci/go
    docker:
      - image: circleci/golang:1.16
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - run: echo 'export PATH=${GOPATH}/bin/:${PATH}' >> $BASH_ENV
      - checkout
      - run: go get -v -t -d ./...
      - run: go get github.com/mitchellh/gox
      - run: go get github.com/tcnksm/ghr
      - run: gox -verbose --osarch "darwin/amd64 linux/amd64 windows/amd64" -output "${GOPATH}/pkg/gh-open/gh-open_{{.OS}}_{{.Arch}}"  ./ ./...
      - run: find ${GOPATH}/pkg/gh-open/ -name "gh-open_*" -exec zip -j -m {}.zip {} \;
      - run: ghr -u $CIRCLE_PROJECT_USERNAME $CIRCLE_TAG $GOPATH/pkg/gh-open/

workflows:
  version: 2
  build:
    jobs:
      - build:
          context:
            - docker-hub-creds
          filters:
            branches:
              only: /.*/
  deploy:
    jobs:
      - deploy:
          context:
            - docker-hub-creds
            - github-creds
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
