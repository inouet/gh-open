name: CI/CD

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.16'
      
      - name: Get dependencies
        run: go get -v -t -d ./...
      
      - name: Install linter
        run: go install golang.org/x/lint/golint@latest
      
      - name: Lint
        run: golint ./...
      
      - name: Vet
        run: go vet ./...
      
      - name: Test
        run: go test -v -race ./...

  deploy:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.16'
      
      - name: Get dependencies
        run: go get -v -t -d ./...
      
      - name: Install build tools
        run: |
          go install github.com/mitchellh/gox@latest
          go install github.com/tcnksm/ghr@latest
      
      - name: Build binaries
        run: |
          gox -verbose --osarch "darwin/amd64 linux/amd64 windows/amd64" -output "pkg/gh-open/gh-open_{{.OS}}_{{.Arch}}" ./ ./...
      
      - name: Create zip archives
        run: |
          mkdir -p pkg/gh-open/
          find pkg/gh-open/ -name "gh-open_*" -exec zip -j -m {}.zip {} \;
      
      - name: Deploy to GitHub Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ghr ${GITHUB_REF#refs/tags/} pkg/gh-open/ 